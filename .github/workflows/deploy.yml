name: Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - .gitignore
      - README.md
      - CONTRIBUTING.md
      - LICENSE
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  pages: write
  id-token: write
  issues: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests and Linters
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      URL_CHECKER_TIMEOUT: ${{ vars.URL_CHECKER_TIMEOUT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Upgrade npm to 9.2
        run: npm install -g npm@9.2.0

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run linters
        run: npm run lint:all

      - name: Run all scripts in script/**
        run: |
          set -e
          for script in script/*.js; do
            if [ -f "$script" ]; then
              echo "Running $script"
              node "$script"
            fi
          done

      - name: Run url-checker.js with timeout
        run: node script/url-checker.js
        env:
          URL_CHECKER_TIMEOUT: ${{ env.URL_CHECKER_TIMEOUT }}

  build:
    name: Build Static Pages
    runs-on: ubuntu-latest
    needs: test
    env:
      PATH_PREFIX: "/${{ github.event.repository.name }}/"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Set PATH_PREFIX for Eleventy
        run: echo "PATH_PREFIX=${{ env.PATH_PREFIX }}" >> $GITHUB_ENV

      - name: Build static site with 11ty
        run: npm run prod

      - name: Upload _site as artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          name: site
          path: _site

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: success()
    environment:
      name: github-pages
      url: https://${{ github.actor }}.github.io/${{ github.event.repository.name }}/

    steps:
      - name: Download built site
        uses: actions/download-artifact@v4
        with:
          name: site
          path: _site

      - name: Deploy ðŸš€
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: site

      - name: Get date
        id: get_date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Determine Deployment Status
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "ISSUE_TITLE=${{ env.DATE }} - Deployment Succeeded" >> $GITHUB_ENV
          else
            echo "ISSUE_TITLE=${{ env.DATE }} - Deployment Failed" >> $GITHUB_ENV
          fi

      - name: Setup GitHub CLI
        uses: cli/cli-action@v2

      - name: Create summary issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO_URL="https://${{ github.actor }}.github.io/${{ github.event.repository.name }}/"
          gh issue create \
            --title "${{ env.ISSUE_TITLE }}" \
            --body "URL: $REPO_URL" \
            --label "summary" \
            --repo ${{ github.repository }}
